首先建立一個class，有5個整數型態的data member:N.M.vertex1.vertex2.cost1，分別接收輸入的節點數量，邊數量，以及有哪些邊和邊的權重。
有4個整數型態的vector,mid儲存最短路徑除了起終點之外的節點，cost負責儲存邊的權重，found儲存此點是否以找到最短路徑的狀態，distance負責儲存最短路徑的總權重。

有4個function:

1.Input:
負責接收輸入內容，包含節點數，邊數，以及邊的關係和權重存在cost陣列。
並且初始化cost陣列的內容，自己和自己的邊長為0，沒有邊相連的節點邊長為30000。

2.ShortestPath:
首先初始化，distance這個矩陣，將和起點的各個點的權重初始化，接著將found這個陣列初始化，將起點的found設為1
接著藉由choose回傳值u選出已經確定最小路徑的節點，並將此節點的find設為1。
接著將每一個尚未選出最小路徑的節點，加入u這一個節點，並且比較加入後，是否有產生更短的路徑
如果有產生更短的路徑，則更新此節點的distance，並將u點存入mid，來記錄此節點的最短路徑有經過u

3.Choose:
將每一個distance中的最短路徑和min值比較，選出distance最小的index，因為經過其他點不會對選出的點產生更短路徑，所以被選出的點已經是最短路徑了
並且回傳此點的index

4.Show:
印出0和其他點的最短路徑值以及路徑上的節點，如果沒有最短路徑則印出Impossible

接著在main function中，依序呼叫Input和ShortestPath(0)和a.Show(0)